import java.io.*;
import java.util.*;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringBuilder sb = new StringBuilder(1000);
	static StringTokenizer st;
	static int n;
	static int map[][];
	static boolean v[][];
	static int max = 0;
	static boolean vch(int x, int y) {
		if(v[x][y])
			return false;
		for (int i = 1; i < n; i++) {
			if(v[x][i])
				return false;
			if(v[i][y])
				return false;
		}
		for (int i = 1; i < n; i++) {
			if (x - i >= 0 && y - i >= 0)
				if(v[x - i][y - i])
					return false;
			if (x + i < n && y + i < n)
				 if(v[x + i][y + i])
					 return false;
			if (x - i >= 0 && y + i < n)
				if(v[x - i][y + i])
					return false;
			if(x + i < n && y - i >= 0)
				if(v[x + i][y - i])
					return false;
		}
		return true;
	}
	static void chk(int x, int y, boolean c) {
		v[x][y] = c;
		for (int i = 1; i < n; i++) {
			v[x][i] = c;
			v[i][y] = c;
		}
		for (int i = 1; i < n; i++) {
			if (x - i >= 0 && y - i >= 0)
				v[x - i][y - i] = c;
			if (x + i < n && y + i < n)
				v[x + i][y + i] = c;
			if (x - i >= 0 && y + i < n)
				v[x - i][y + i] = c;
			if(x + i < n && y - i >= 0)
				v[x + i][y - i] = c;
		}

	}

	static void perm(int cnt) {
		if(cnt==n) {
			max++;
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (vch(i,j))
					continue;
				chk(i,j,true);
				perm(cnt+1);
				chk(i,j,false);
			}
		}

	}

	public static void main(String[] args) throws IOException {
		n = Integer.parseInt(br.readLine());
		map = new int[n][n];
		v = new boolean[n][n];
		perm(0);
		System.out.println(max);
	}

}
