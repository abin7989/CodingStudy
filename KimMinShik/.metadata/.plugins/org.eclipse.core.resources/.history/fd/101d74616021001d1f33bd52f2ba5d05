import java.io.*;
import java.util.*;
public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringBuilder sb = new StringBuilder(1000);
	static StringTokenizer st ;
	static boolean v[];
	static Node al [];
	public static void DFS(int num) {
		if(v[num])
			return;
		v[num] = true;
		sb.append(num).append(" ");
		for(int i = 0,size = al[num].nl.size() ; i <size ;i++) {
			DFS(al[num].nl.get(i).is);
		}
	}
	public static void main(String[] args)throws IOException{
		st = new StringTokenizer(br.readLine()," ");
		int n =Integer.parseInt(br.readLine());
		int m =Integer.parseInt(br.readLine());
		int start =Integer.parseInt(br.readLine());
		v= new boolean [n];
		al = new Node[n+1];
		for(int i = 1;i<=n;i++) {
			al[i] = new Node(i);
		}
		for(int i = 0;i<m;i++) {
			st = new StringTokenizer(br.readLine()," ");
			
			int x=Integer.parseInt(br.readLine());
			int y =Integer.parseInt(br.readLine());
			al[x].nl.add(al[y]);
		}
		
	}
	static class Node{
		
		List<Node> nl = new ArrayList<Main.Node>();
		int is;
		public Node(int is) {
			this.is = is;
		}
	}
}
