import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringBuilder sb = new StringBuilder(3000);
	static StringTokenizer st = null;
	static char map[][];
	static boolean v[][];
	static int n;
	static int m;
	static int dx[] = {1,-1,0,0};
	static int dy[] = {0,0,1,-1};
	static int max = 0;
	public static void DFS(int x,int y,String s,int cnt) {
		char temp = s.charAt(s.length()-1);
		for(int i = s.length()-2 ; i>=0;i--) {
			if(temp==s.charAt(i)) {
				max = Math.max(max,cnt);
				return;
			}
		}
		for(int i = 0 ; i <4;i++) {
			int nx = x+dx[i];
			int ny = y+dy[i];
			if(nx<0||nx>=n||ny<0||ny>=m||v[nx][ny])
				continue;
			v[nx][ny]= true;
			DFS(nx,ny,s+map[nx][ny],cnt+1);
			v[nx][ny] = false;
		}
	}
	public static void main(String[] args) throws IOException{
		st = new StringTokenizer(br.readLine()," ");
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		map = new char [n][m];
		v = new boolean [n][m];
		String s;
		for(int i = 0 ; i < n ;i++) {
			s = br.readLine();
			for(int j = 0 ; j<m;j++) {
				map[i][j] = s.charAt(j);
			}
		}
		DFS(0,0,map[0][0]+"",0);
		System.out.println(max);
	}
}
